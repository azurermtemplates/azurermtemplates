{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "West US",
            "allowedValues": [
                "West US",
                "East US"
            ],
            "metadata": {
                "Description": "Location of resources"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "Description": "Storage Account to create for the disks"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "metadata": {
                "Description": "Storage Account type"
            }
        },
        "publicIPAddressType": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic"
            ],
            "metadata": {
                "Description": "Public IP address type"
            }
        },
        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds",
            "metadata": {
                "Description": "Storage container for the disks"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "Description": "VM name"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "Description": "Availability Set name"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A0",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "Description": "Size of the VM"
            }
        },
        "vmSourceImageName": {
            "type": "string",

            // Get-AzureVMImage | ? { $_.ImageName -like "*Ubuntu-14_10*" } | ft ImageName
            // b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150202-en-us-30GB

            "defaultValue": "b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_10-amd64-server-20150202-en-us-30GB",
            "metadata": {
                "Description": "Image to use for the VM"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "Description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "Description": "Admin password"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "Description": "VNET name"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "Description": "VNET address space"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Subnet-1",
            "metadata": {
                "Description": "Subnet 1 name"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "Description": "Subnet 1 address space"
            }
        },
        "nicName": {
            "type": "string",
            "metadata": {
                "Description": "NIC name"
            }
        },
        "vmExtensionName": {
            "type": "string",
            "metadata": {
                "Description": "Name of the VM extension"
            }
        },
        "customScriptFilePath": {
            "type": "string",
            "metadata": {
                "Description": "Path to the custom script"
            }
        },
        "customScriptCommandToExecute": {
            "type": "string",
            "metadata": {
                "Description": "Command to execute the custom script"
            }
        }
    },
    "variables": {
        "sourceImageName": "[concat('/', subscription().subscriptionId,'/services/images/',parameters('vmSourceImageName'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "scaleNumber": 3
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2014-12-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiVersion": "2014-12-01-preview",
            "location": "[parameters('location')]",
            "properties": {
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat('publicIP', copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "foo",
                "count": "[variables('scaleNumber')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('nicName'), 0)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP0')]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.4",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIP0')]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('nicName'), 1)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP1')]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.5",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIP1')]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('nicName'), 2)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP2')]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.6",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIP2')]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "foo",
                "count": "[variables('scaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('vmName'), copyIndex())]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "sourceImage": {
                        "id": "[variables('sourceImageName')]"
                    },
                    "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'), copyIndex(),'/', parameters('vmExtensionName'))]",
            "apiVersion": "2014-12-01-preview",
            "location": "[parameters('location')]",
            "copy": {
                "name": "foo",
                "count": "[variables('scaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                    "fileUris": [
                        "[parameters('customScriptFilePath')]"
                    ],
                    "commandToExecute": "[concat(parameters('customScriptCommandToExecute'), copyIndex())]"
                }
            }
        }
    ]
}
